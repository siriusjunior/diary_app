FROM ruby:2.6.4

ENV RAILS_ENV=production

# パッケージのインストール
RUN apt-get update -qq && \
    apt-get install -y build-essential \
                        libpq-dev \
                        nodejs \
    && rm -rf /var/lib/apt/lists/*

# コンテナにyarnをインストールする手順(https://satoh-d.hatenablog.com/entry/2020/10/21/180000),aptコマンドのhttps対応)
RUN apt-get update && apt-get install -y curl apt-transport-https wget && \
    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list && \
    apt-get update && apt-get install -y yarn

# コンテナのディレクトリ設定
ENV APP_ROOT /app
# ルートディレクトリの作成・指定
RUN mkdir ${APP_ROOT}
WORKDIR ${APP_ROOT}

ADD Gemfile ${APP_ROOT}/Gemfile
ADD Gemfile.lock ${APP_ROOT}/Gemfile.lock
RUN bundle install

# 静的コンテンツとsocketをNginxコンテナから参照(https://qiita.com/na-o-ys/items/1a863419e1f6c3063ace)
RUN mkdir -p tmp/pids && \
    mkdir -p tmp/sockets

# コンテナー起動時に実行するスクリプト(https://matsuand.github.io/docs.docker.jp.onthefly/samples/rails/)
COPY entrypoint.sh /user/bin/
RUN chmod +x /usr/bin/entrypoint.sh
ENTRYPOINT ["entrypoint.sh"]
ADD . ${APP_ROOT}

# yarnパッケージのインストール
RUN yarn add bootstrap bootstrap-material-design jquery popper.js

# puma起動
CMD bash -c "rm -f tmp/pids/server.pid && bundle exec puma -C config/puma.rb"